#!/bin/bash -e

# The assemble script builds the application artifacts from a source and
# places them into appropriate directories inside the image.

# Execute the default S2I script
. /usr/libexec/s2i/assemble

set -e

# We need to run micropipenv manually because the projects are in
# subdirectories.

install_tool "micropipenv" "[toml]"

# Poetry 1.5.0 breaks micropipenv, generate the requirements instead.
pip install poetry


for subpackage in datanommer.models datanommer.commands datanommer.consumer; do
    pushd $subpackage
    echo "---> Generating requirements in ${subpackage}..."
    if [ "$subpackage" == "datanommer.models" ]; then
        poetry export -o requirements.txt --without-hashes --extras schemas
    else
        poetry export -o requirements.txt --without-hashes
    fi
    echo "---> Installing dependencies in ${subpackage}..."
    pip install -r requirements.txt
    # Now install the root project too.
    pip install . --no-deps
    popd
done

# set permissions for any installed artifacts
fix-permissions /opt/app-root -P
